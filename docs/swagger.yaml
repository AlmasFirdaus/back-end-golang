basePath: /api/v1
definitions:
  dtos.BadRequestResponse:
    properties:
      errors: {}
      message:
        example: Bad Request
        type: string
      status_code:
        example: 400
        type: integer
    type: object
  dtos.InternalServerErrorResponse:
    properties:
      errors: {}
      message:
        example: Internal Server Error
        type: string
      status_code:
        example: 500
        type: integer
    type: object
  dtos.NotFoundResponse:
    properties:
      errors: {}
      message:
        example: Not Found
        type: string
      status_code:
        example: 404
        type: integer
    type: object
  dtos.UnauthorizedResponse:
    properties:
      errors: {}
      message:
        example: Unauthorized
        type: string
      status_code:
        example: 401
        type: integer
    type: object
  dtos.UserCreeatedResponse:
    properties:
      data:
        $ref: '#/definitions/dtos.UserInformationResponse'
      message:
        example: Successfully registered
        type: string
      status_code:
        example: 201
        type: integer
    type: object
  dtos.UserInformationResponse:
    properties:
      birth_date:
        example: "2002-09-12"
        type: string
      citizen:
        example: Indonesia
        type: string
      created_at:
        example: "2023-05-17T15:07:16.504+07:00"
        type: string
      email:
        example: me@hanifz.com
        type: string
      full_name:
        example: Mochammad Hanif
        type: string
      gender:
        example: Laki-Laki
        type: string
      id:
        example: 1
        type: integer
      phone_number:
        example: "0851555555151"
        type: string
      profile_picture:
        example: default.jpg
        type: string
      role:
        example: user
        type: string
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdXRob3JpemVkIjp0cnVlLCJleHAiOjE2ODQ0MDYzMzMsInJvbGUiOiJ1c2VyIiwidXNlcklkIjozfQ.B8vBlMIiU4iZR0YHe4-Mo3DpJ2nwlTV3PuhEJc31pMo
        type: string
      updated_at:
        example: "2023-05-17T15:07:16.504+07:00"
        type: string
    type: object
  dtos.UserLoginInput:
    properties:
      email:
        example: me@hanifz.com
        type: string
      password:
        example: qweqwe123
        type: string
    type: object
  dtos.UserRegisterInput:
    properties:
      confirm_password:
        example: qweqwe123
        type: string
      email:
        example: me@hanifz.com
        type: string
      full_name:
        example: Mochammad Hanif
        type: string
      password:
        example: qweqwe123
        type: string
      phone_number:
        example: "0851555555151"
        type: string
      role:
        example: user
        type: string
    type: object
  dtos.UserStatusOKResponse:
    properties:
      data:
        $ref: '#/definitions/dtos.UserInformationResponse'
      message:
        example: Successfully get user credentials
        type: string
      status_code:
        example: 200
        type: integer
    type: object
  dtos.UserUpdateInformationInput:
    properties:
      birth_date:
        example: "2002-09-09"
        type: string
      gender:
        example: Laki-Laki
        type: string
      profile_picture:
        example: default.jpg
        type: string
    type: object
  dtos.UserUpdatePasswordInput:
    properties:
      confirm_password:
        example: asdqwe123
        type: string
      new_password:
        example: asdqwe123
        type: string
      old_password:
        example: qweqwe123
        type: string
    type: object
  dtos.UserUpdateProfileInput:
    properties:
      birth_date:
        example: "2000-01-01"
        type: string
      citizen:
        example: Indonesia
        type: string
      full_name:
        example: Hanif Mochammad
        type: string
      phone_number:
        example: "085199999999"
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: ec2-3-26-30-178.ap-southeast-2.compute.amazonaws.com:8088
info:
  contact:
    name: Capstone Alterra Group 7
    url: https://github.com/capstone-alterra-group-7
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Tripease API Documentation
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Login an account
      parameters:
      - description: Payload Body [RAW]
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dtos.UserLoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.UserStatusOKResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.BadRequestResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dtos.UnauthorizedResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dtos.NotFoundResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dtos.InternalServerErrorResponse'
      summary: Login
      tags:
      - User
  /register:
    post:
      consumes:
      - application/json
      description: Register an account
      parameters:
      - description: Payload Body [RAW]
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dtos.UserRegisterInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dtos.UserCreeatedResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.BadRequestResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dtos.UnauthorizedResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dtos.NotFoundResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dtos.InternalServerErrorResponse'
      summary: Register
      tags:
      - User
  /user:
    get:
      consumes:
      - application/json
      description: User get credentials
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.UserStatusOKResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.BadRequestResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dtos.UnauthorizedResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dtos.NotFoundResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dtos.InternalServerErrorResponse'
      security:
      - BearerAuth: []
      summary: Get Credentials
      tags:
      - User
  /user/update-information:
    patch:
      consumes:
      - application/json
      description: User update an information
      parameters:
      - description: Payload Body [RAW]
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dtos.UserUpdateInformationInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.UserStatusOKResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.BadRequestResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dtos.UnauthorizedResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dtos.NotFoundResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dtos.InternalServerErrorResponse'
      security:
      - BearerAuth: []
      summary: Update Information
      tags:
      - User
  /user/update-password:
    put:
      consumes:
      - application/json
      description: User update an password
      parameters:
      - description: Payload Body [RAW]
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dtos.UserUpdatePasswordInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.UserStatusOKResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.BadRequestResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dtos.UnauthorizedResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dtos.NotFoundResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dtos.InternalServerErrorResponse'
      security:
      - BearerAuth: []
      summary: Update Password
      tags:
      - User
  /user/update-profile:
    put:
      consumes:
      - application/json
      description: User update an profile
      parameters:
      - description: Payload Body [RAW]
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dtos.UserUpdateProfileInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.UserStatusOKResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.BadRequestResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dtos.UnauthorizedResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dtos.NotFoundResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dtos.InternalServerErrorResponse'
      security:
      - BearerAuth: []
      summary: Update Profile
      tags:
      - User
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
