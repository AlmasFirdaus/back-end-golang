{
    "swagger": "2.0",
    "info": {
        "title": "Tripease API Documentation",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Capstone Alterra Group 7",
            "url": "https://github.com/capstone-alterra-group-7"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "ec2-3-26-30-178.ap-southeast-2.compute.amazonaws.com:8088",
    "basePath": "/api/v1",
    "paths": {
        "/login": {
            "post": {
                "description": "Login an account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "Payload Body [RAW]",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.UserLoginInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.UserStatusOKResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Register an account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Register",
                "parameters": [
                    {
                        "description": "Payload Body [RAW]",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.UserRegisterInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dtos.UserCreeatedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "User get credentials",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get Credentials",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.UserStatusOKResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/update-information": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "User update an information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update Information",
                "parameters": [
                    {
                        "description": "Payload Body [RAW]",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.UserUpdateInformationInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.UserStatusOKResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/update-password": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "User update an password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update Password",
                "parameters": [
                    {
                        "description": "Payload Body [RAW]",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.UserUpdatePasswordInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.UserStatusOKResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/update-profile": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "User update an profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update Profile",
                "parameters": [
                    {
                        "description": "Payload Body [RAW]",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.UserUpdateProfileInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.UserStatusOKResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dtos.BadRequestResponse": {
            "type": "object",
            "properties": {
                "errors": {},
                "message": {
                    "type": "string",
                    "example": "Bad Request"
                },
                "status_code": {
                    "type": "integer",
                    "example": 400
                }
            }
        },
        "dtos.InternalServerErrorResponse": {
            "type": "object",
            "properties": {
                "errors": {},
                "message": {
                    "type": "string",
                    "example": "Internal Server Error"
                },
                "status_code": {
                    "type": "integer",
                    "example": 500
                }
            }
        },
        "dtos.NotFoundResponse": {
            "type": "object",
            "properties": {
                "errors": {},
                "message": {
                    "type": "string",
                    "example": "Not Found"
                },
                "status_code": {
                    "type": "integer",
                    "example": 404
                }
            }
        },
        "dtos.UnauthorizedResponse": {
            "type": "object",
            "properties": {
                "errors": {},
                "message": {
                    "type": "string",
                    "example": "Unauthorized"
                },
                "status_code": {
                    "type": "integer",
                    "example": 401
                }
            }
        },
        "dtos.UserCreeatedResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dtos.UserInformationResponse"
                },
                "message": {
                    "type": "string",
                    "example": "Successfully registered"
                },
                "status_code": {
                    "type": "integer",
                    "example": 201
                }
            }
        },
        "dtos.UserInformationResponse": {
            "type": "object",
            "properties": {
                "birth_date": {
                    "type": "string",
                    "example": "2002-09-12"
                },
                "citizen": {
                    "type": "string",
                    "example": "Indonesia"
                },
                "created_at": {
                    "type": "string",
                    "example": "2023-05-17T15:07:16.504+07:00"
                },
                "email": {
                    "type": "string",
                    "example": "me@hanifz.com"
                },
                "full_name": {
                    "type": "string",
                    "example": "Mochammad Hanif"
                },
                "gender": {
                    "type": "string",
                    "example": "Laki-Laki"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "phone_number": {
                    "type": "string",
                    "example": "0851555555151"
                },
                "profile_picture": {
                    "type": "string",
                    "example": "default.jpg"
                },
                "role": {
                    "type": "string",
                    "example": "user"
                },
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdXRob3JpemVkIjp0cnVlLCJleHAiOjE2ODQ0MDYzMzMsInJvbGUiOiJ1c2VyIiwidXNlcklkIjozfQ.B8vBlMIiU4iZR0YHe4-Mo3DpJ2nwlTV3PuhEJc31pMo"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2023-05-17T15:07:16.504+07:00"
                }
            }
        },
        "dtos.UserLoginInput": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "me@hanifz.com"
                },
                "password": {
                    "type": "string",
                    "example": "qweqwe123"
                }
            }
        },
        "dtos.UserRegisterInput": {
            "type": "object",
            "properties": {
                "confirm_password": {
                    "type": "string",
                    "example": "qweqwe123"
                },
                "email": {
                    "type": "string",
                    "example": "me@hanifz.com"
                },
                "full_name": {
                    "type": "string",
                    "example": "Mochammad Hanif"
                },
                "password": {
                    "type": "string",
                    "example": "qweqwe123"
                },
                "phone_number": {
                    "type": "string",
                    "example": "0851555555151"
                },
                "role": {
                    "type": "string",
                    "example": "user"
                }
            }
        },
        "dtos.UserStatusOKResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dtos.UserInformationResponse"
                },
                "message": {
                    "type": "string",
                    "example": "Successfully get user credentials"
                },
                "status_code": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "dtos.UserUpdateInformationInput": {
            "type": "object",
            "properties": {
                "birth_date": {
                    "type": "string",
                    "example": "2002-09-09"
                },
                "gender": {
                    "type": "string",
                    "example": "Laki-Laki"
                },
                "profile_picture": {
                    "type": "string",
                    "example": "default.jpg"
                }
            }
        },
        "dtos.UserUpdatePasswordInput": {
            "type": "object",
            "properties": {
                "confirm_password": {
                    "type": "string",
                    "example": "asdqwe123"
                },
                "new_password": {
                    "type": "string",
                    "example": "asdqwe123"
                },
                "old_password": {
                    "type": "string",
                    "example": "qweqwe123"
                }
            }
        },
        "dtos.UserUpdateProfileInput": {
            "type": "object",
            "properties": {
                "birth_date": {
                    "type": "string",
                    "example": "2000-01-01"
                },
                "citizen": {
                    "type": "string",
                    "example": "Indonesia"
                },
                "full_name": {
                    "type": "string",
                    "example": "Hanif Mochammad"
                },
                "phone_number": {
                    "type": "string",
                    "example": "085199999999"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}